import{c as d}from"./config-BJNG_Aa3.js";const s=Symbol("adapter");class u{name;kind;[s];constructor(e){this.kind=e.kind,this.name=e.name,this[s]=e}async queryPermission(e={}){const{mode:t="read"}=e,i=this[s];if(i.queryPermission)return i.queryPermission({mode:t});if(t==="read")return"granted";if(t==="readwrite")return i.writable?"granted":"denied";throw new TypeError(`Mode ${t} must be 'read' or 'readwrite'`)}async requestPermission({mode:e="read"}={}){const t=this[s];if(t.requestPermission)return t.requestPermission({mode:e});if(e==="read")return"granted";if(e==="readwrite")return t.writable?"granted":"denied";throw new TypeError(`Mode ${e} must be 'read' or 'readwrite'`)}async remove(e={}){await this[s].remove(e)}async isSameEntry(e){return this===e?!0:!e||typeof e!="object"||this.kind!==e.kind?!1:this[s].isSameEntry(e[s])}}Object.defineProperty(u.prototype,Symbol.toStringTag,{value:"FileSystemHandle",writable:!1,enumerable:!1,configurable:!0});const o=globalThis.FileSystemHandle;o&&(o.prototype.queryPermission??=function(r){return"granted"});const m=d.WritableStream??globalThis.WritableStream;class a extends m{_closed=!1;constructor(e){super(e),Object.setPrototypeOf(this,a.prototype)}async close(){this._closed=!0;const e=this.getWriter(),t=e.close();return e.releaseLock(),t}seek(e){return this.write({type:"seek",position:e})}truncate(e){return this.write({type:"truncate",size:e})}write(e){if(this._closed)return Promise.reject(new TypeError("Cannot write to a CLOSED writable stream"));const t=this.getWriter(),i=t.write(e);return t.releaseLock(),i}}Object.defineProperty(a.prototype,Symbol.toStringTag,{value:"FileSystemWritableFileStream",writable:!1,enumerable:!1,configurable:!0});Object.defineProperties(a.prototype,{close:{enumerable:!0},seek:{enumerable:!0},truncate:{enumerable:!0},write:{enumerable:!0}});{const r=globalThis;r.FileSystemFileHandle&&!r.FileSystemFileHandle.prototype.createWritable&&!r.FileSystemWritableFileStream&&(r.FileSystemWritableFileStream=a)}const c=globalThis.FileSystemFileHandle;if(c&&!("createWritable"in c.prototype)){const r=new WeakMap,e=FileSystemDirectoryHandle.prototype.getFileHandle;FileSystemDirectoryHandle.prototype.getFileHandle=async function(...i){const l=await e.call(this,...i);return r.set(l,this),l}}const n=Symbol("adapter");class y extends u{[n];constructor(e){super(e),this[n]=e}async createWritable(e={}){const t=await this[n].createWritable(e);return new a(t)}async getFile(){return this[n].getFile()}}Object.defineProperty(y.prototype,Symbol.toStringTag,{value:"FileSystemFileHandle",writable:!1,enumerable:!1,configurable:!0});Object.defineProperties(y.prototype,{createWritable:{enumerable:!0},getFile:{enumerable:!0}});export{y as FileSystemFileHandle,y as default};
